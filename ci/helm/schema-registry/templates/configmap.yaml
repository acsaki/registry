apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
data:
  registry.yaml: |-
{{- include "registry.config" . | indent 4}}

  entrypoint.sh: |-
{{- include "entrypoint.sh" . | indent 4}}

  krb5.conf: |
    [libdefaults]
      renew_lifetime = 7d
      forwardable = true
      default_realm = K8S.COM
      ticket_lifetime = 24h
      dns_lookup_realm = false
      dns_lookup_kdc = false
      allow_weak_crypto = false
      clockskew = 300
      rdns = false
      udp_preference_limit = 1
    [logging]
      default = CONSOLE
      admin_server = CONSOLE
      kdc = CONSOLE
    [realms]
      K8S.COM = {
        admin_server = kdc
        kdc = kdc
      }

  generate-certificates-script: |
    #/bin/bash -xe
    SERVER_DOMAIN={{ .Release.Name}}.{{ .Values.namespace }}.svc.cluster.local
    SRVPASS=srv123
    SERVER_KEYSTORE=/tmp/registry.server.keystore.jks
    CSR_FILE=/tmp/cert-file.csr
    CA_CERT=/tmp/ca-cert
    CA_KEY=/tmp/ca-key
    SIGNED_CERT=/tmp/cert.signed
    # create server certificate
    keytool -genkey -keystore ${SERVER_KEYSTORE} -validity 365 -storepass $SRVPASS -keypass $SRVPASS -dname "CN=${SERVER_DOMAIN}" -storetype pkcs12 -keyalg RSA -keysize 2048
    # create certificat request
    keytool -keystore ${SERVER_KEYSTORE} -certreq -file ${CSR_FILE} -storepass $SRVPASS -keypass $SRVPASS
    # sign the server certificate
    openssl x509 -req -CA ${CA_CERT} -CAkey ${CA_KEY}  -in ${CSR_FILE} -out ${SIGNED_CERT} -days 365 -CAcreateserial -passin pass:$SRVPASS
    # create keystore
    keytool -keystore ${SERVER_KEYSTORE} -alias CARoot -import -file ${CA_CERT} -storepass $SRVPASS -keypass $SRVPASS -noprompt
    keytool -keystore ${SERVER_KEYSTORE} -import -file ${SIGNED_CERT} -storepass $SRVPASS -keypass $SRVPASS -noprompt
    keytool -keystore ${SERVER_KEYSTORE} -alias CARoot -delete -storepass $SRVPASS -keypass $SRVPASS -noprompt


{{ if eq .Values.security.type "kerberos" }}
binaryData:
  ca-key:
    {{ .Values.security.caKeyPath | b64enc }}
  ca-cert:
    {{ .Values.security.caCertPath | b64enc }}
{{ end }}
